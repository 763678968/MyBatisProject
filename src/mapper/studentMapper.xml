<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--&lt;!&ndash;namespace：该mapper.xml映射文件的唯一标识&ndash;&gt;-->
<!--<mapper namespace="mapper.studentMapper">-->
<!--    &lt;!&ndash; 后续通过namespace.id &ndash;&gt;-->
<!--    &lt;!&ndash; parameterType：输入参数的类型 &ndash;&gt;-->
<!--    &lt;!&ndash; resultType：查询返回结果值的类型，返回类型 &ndash;&gt;-->
<!--    <select id="queryStudentByStuno" resultType="student" parameterType="int">-->
<!--        select * from student where stuno = #{stuno}-->
<!--    </select>-->

<!--    <insert id="addStudent" parameterType="student">-->
<!--        insert into student(stuno, stuname, stuage, graname)  values(#{stuNo}, #{stuName},#{stuAge},#{graName})-->
<!--    </insert>-->

<!--    <update id="updateStudentByStuno" parameterType="student">-->
<!--        update student set stuname = #{stuName}, stuage = #{stuAge}, graname = #{graName} where stuno = #{stuNo}-->
<!--    </update>-->

<!--    <delete id="deleteStudentByStuno" parameterType="int">-->
<!--        delete from student where stuno = #{stuno}-->
<!--    </delete>-->

<!--    <select id="queryAllStudents" resultType="student">-->
<!--        select * from student-->
<!--    </select>-->
<!--</mapper>-->


<!-- 操作MyBatis的接口 -->
<mapper namespace="mapper.StudentMapper">
    <!-- 后续通过namespace.id -->
    <!-- parameterType：输入参数的类型 -->
    <!-- resultType：查询返回结果值的类型，返回类型 -->
    <select id="queryStudentByStuno" resultType="student" parameterType="int" resultMap="studentMapping">
            select * from student where stuno = #{stuno}
        </select>

    <resultMap type="student" id="studentMapping">
        <!--        分为主键id和非主键result-->
        <id property="stuno" column="stuno"/>
        <result property="stuName" column="stuname"/>
        <result property="stuAge" column="stuage"/>
        <result property="graName" column="graname"/>
        <result property="stuSex" column="stusex" javaType="boolean" jdbcType="INTEGER"/>
    </resultMap>

<!--    查询：使用了类型转换器
        1. 如果 类中属性 和 表中的字段类型 能够合理识别(String - varchar)，则可以使用resultType；否则(boolean - number)使用resultMap
        2. 如果 类中属性名 和 表中的字段名 能够合理识别(stuNo - stuno)，则可以使用resultType；否则(id - stuno)使用resultMap
-->
    <select id="queryStudentByStunoWithConverter" resultType="student" parameterType="int" resultMap="studentResult">
            select * from student where stuno = #{stuno}
        </select>
    <resultMap type="student" id="studentResult">
<!--        分为主键id和非主键result-->
        <id property="stuNo" column="stuno"/>
        <result property="stuName" column="stuname"/>
        <result property="stuAge" column="stuage"/>
        <result property="graName" column="graname"/>
        <result property="stuSex" column="stusex" javaType="boolean" jdbcType="INTEGER"/>
    </resultMap>

    <insert id="addStudent" parameterType="student">
            insert into student(stuno, stuname, stuage, graname)  values(#{stuNo}, #{stuName},#{stuAge},#{graName})
        </insert>

<!--    带转换器的增加-->
    <insert id="addStudentWithConverter" parameterType="student">
            insert into student(stuno, stuname, stuage, graname, stusex)  values(#{stuNo}, #{stuName}, #{stuAge}, #{graName}, #{stuSex, javaType=boolean, jdbcType=INTEGER})
        </insert>

    <update id="updateStudentByStuno" parameterType="student">
            update student set stuname = #{stuName}, stuage = #{stuAge}, graname = #{graName} where stuno = #{stuNo}
        </update>

    <delete id="deleteStudentByStuno" parameterType="int">
            delete from student where stuno = #{stuno}
        </delete>

    <select id="queryAllStudents" resultType="student">
            select * from student
        </select>
</mapper>